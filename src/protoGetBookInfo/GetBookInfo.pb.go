// Code generated by protoc-gen-go. DO NOT EDIT.
// source: GetBookInfo.proto

package protoGetBookInfo

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// The request message
type IdRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IdRequest) Reset()         { *m = IdRequest{} }
func (m *IdRequest) String() string { return proto.CompactTextString(m) }
func (*IdRequest) ProtoMessage()    {}
func (*IdRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a2b74f0274dd8fe6, []int{0}
}

func (m *IdRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IdRequest.Unmarshal(m, b)
}
func (m *IdRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IdRequest.Marshal(b, m, deterministic)
}
func (m *IdRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IdRequest.Merge(m, src)
}
func (m *IdRequest) XXX_Size() int {
	return xxx_messageInfo_IdRequest.Size(m)
}
func (m *IdRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_IdRequest.DiscardUnknown(m)
}

var xxx_messageInfo_IdRequest proto.InternalMessageInfo

func (m *IdRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type UrlRequest struct {
	Url                  string   `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UrlRequest) Reset()         { *m = UrlRequest{} }
func (m *UrlRequest) String() string { return proto.CompactTextString(m) }
func (*UrlRequest) ProtoMessage()    {}
func (*UrlRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a2b74f0274dd8fe6, []int{1}
}

func (m *UrlRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UrlRequest.Unmarshal(m, b)
}
func (m *UrlRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UrlRequest.Marshal(b, m, deterministic)
}
func (m *UrlRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UrlRequest.Merge(m, src)
}
func (m *UrlRequest) XXX_Size() int {
	return xxx_messageInfo_UrlRequest.Size(m)
}
func (m *UrlRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UrlRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UrlRequest proto.InternalMessageInfo

func (m *UrlRequest) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

// The response message containing the book info json url.
type BookInfoJsonReply struct {
	InfoJson             string   `protobuf:"bytes,1,opt,name=infoJson,proto3" json:"infoJson,omitempty"`
	ErrorMessage         string   `protobuf:"bytes,2,opt,name=errorMessage,proto3" json:"errorMessage,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BookInfoJsonReply) Reset()         { *m = BookInfoJsonReply{} }
func (m *BookInfoJsonReply) String() string { return proto.CompactTextString(m) }
func (*BookInfoJsonReply) ProtoMessage()    {}
func (*BookInfoJsonReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_a2b74f0274dd8fe6, []int{2}
}

func (m *BookInfoJsonReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BookInfoJsonReply.Unmarshal(m, b)
}
func (m *BookInfoJsonReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BookInfoJsonReply.Marshal(b, m, deterministic)
}
func (m *BookInfoJsonReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BookInfoJsonReply.Merge(m, src)
}
func (m *BookInfoJsonReply) XXX_Size() int {
	return xxx_messageInfo_BookInfoJsonReply.Size(m)
}
func (m *BookInfoJsonReply) XXX_DiscardUnknown() {
	xxx_messageInfo_BookInfoJsonReply.DiscardUnknown(m)
}

var xxx_messageInfo_BookInfoJsonReply proto.InternalMessageInfo

func (m *BookInfoJsonReply) GetInfoJson() string {
	if m != nil {
		return m.InfoJson
	}
	return ""
}

func (m *BookInfoJsonReply) GetErrorMessage() string {
	if m != nil {
		return m.ErrorMessage
	}
	return ""
}

func init() {
	proto.RegisterType((*IdRequest)(nil), "protoGetBookInfo.IdRequest")
	proto.RegisterType((*UrlRequest)(nil), "protoGetBookInfo.UrlRequest")
	proto.RegisterType((*BookInfoJsonReply)(nil), "protoGetBookInfo.BookInfoJsonReply")
}

func init() { proto.RegisterFile("GetBookInfo.proto", fileDescriptor_a2b74f0274dd8fe6) }

var fileDescriptor_a2b74f0274dd8fe6 = []byte{
	// 209 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x74, 0x4f, 0x2d, 0x71,
	0xca, 0xcf, 0xcf, 0xf6, 0xcc, 0x4b, 0xcb, 0xd7, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x12, 0x00,
	0x53, 0x48, 0xe2, 0x4a, 0xd2, 0x5c, 0x9c, 0x9e, 0x29, 0x41, 0xa9, 0x85, 0xa5, 0xa9, 0xc5, 0x25,
	0x42, 0x7c, 0x5c, 0x4c, 0x99, 0x29, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0x9c, 0x41, 0x4c, 0x99, 0x29,
	0x4a, 0x72, 0x5c, 0x5c, 0xa1, 0x45, 0x39, 0x30, 0x59, 0x01, 0x2e, 0xe6, 0xd2, 0xa2, 0x1c, 0xa8,
	0x34, 0x88, 0xa9, 0x14, 0xcc, 0x25, 0x08, 0x33, 0xc8, 0xab, 0x38, 0x3f, 0x2f, 0x28, 0xb5, 0x20,
	0xa7, 0x52, 0x48, 0x8a, 0x8b, 0x23, 0x13, 0x2a, 0x00, 0x55, 0x0b, 0xe7, 0x0b, 0x29, 0x71, 0xf1,
	0xa4, 0x16, 0x15, 0xe5, 0x17, 0xf9, 0xa6, 0x16, 0x17, 0x27, 0xa6, 0xa7, 0x4a, 0x30, 0x81, 0xe5,
	0x51, 0xc4, 0x8c, 0x8e, 0x30, 0x72, 0x09, 0x21, 0xb9, 0xb0, 0x28, 0x37, 0xb1, 0x24, 0x33, 0x3f,
	0x4f, 0x28, 0x94, 0x8b, 0x1f, 0x49, 0xd4, 0xa9, 0xd2, 0xd3, 0x45, 0x48, 0x5a, 0x0f, 0xdd, 0x3b,
	0x7a, 0x70, 0xbf, 0x48, 0x29, 0x63, 0x4a, 0x62, 0xb8, 0x55, 0x89, 0x41, 0x28, 0x9c, 0x4b, 0x00,
	0xc5, 0xd8, 0xd0, 0xa2, 0x1c, 0x21, 0x19, 0x4c, 0xad, 0x88, 0x60, 0x20, 0xd2, 0xe0, 0x24, 0x36,
	0xb0, 0x2a, 0x63, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0x55, 0x0d, 0x0e, 0xd3, 0x86, 0x01, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// GetBookInformationClient is the client API for GetBookInformation service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GetBookInformationClient interface {
	// Sends a query
	GetBookInfoByID(ctx context.Context, in *IdRequest, opts ...grpc.CallOption) (*BookInfoJsonReply, error)
	GetBookInfoByUrl(ctx context.Context, in *UrlRequest, opts ...grpc.CallOption) (*BookInfoJsonReply, error)
}

type getBookInformationClient struct {
	cc *grpc.ClientConn
}

func NewGetBookInformationClient(cc *grpc.ClientConn) GetBookInformationClient {
	return &getBookInformationClient{cc}
}

func (c *getBookInformationClient) GetBookInfoByID(ctx context.Context, in *IdRequest, opts ...grpc.CallOption) (*BookInfoJsonReply, error) {
	out := new(BookInfoJsonReply)
	err := c.cc.Invoke(ctx, "/protoGetBookInfo.GetBookInformation/GetBookInfoByID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *getBookInformationClient) GetBookInfoByUrl(ctx context.Context, in *UrlRequest, opts ...grpc.CallOption) (*BookInfoJsonReply, error) {
	out := new(BookInfoJsonReply)
	err := c.cc.Invoke(ctx, "/protoGetBookInfo.GetBookInformation/GetBookInfoByUrl", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GetBookInformationServer is the server API for GetBookInformation service.
type GetBookInformationServer interface {
	// Sends a query
	GetBookInfoByID(context.Context, *IdRequest) (*BookInfoJsonReply, error)
	GetBookInfoByUrl(context.Context, *UrlRequest) (*BookInfoJsonReply, error)
}

// UnimplementedGetBookInformationServer can be embedded to have forward compatible implementations.
type UnimplementedGetBookInformationServer struct {
}

func (*UnimplementedGetBookInformationServer) GetBookInfoByID(ctx context.Context, req *IdRequest) (*BookInfoJsonReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBookInfoByID not implemented")
}
func (*UnimplementedGetBookInformationServer) GetBookInfoByUrl(ctx context.Context, req *UrlRequest) (*BookInfoJsonReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBookInfoByUrl not implemented")
}

func RegisterGetBookInformationServer(s *grpc.Server, srv GetBookInformationServer) {
	s.RegisterService(&_GetBookInformation_serviceDesc, srv)
}

func _GetBookInformation_GetBookInfoByID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GetBookInformationServer).GetBookInfoByID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protoGetBookInfo.GetBookInformation/GetBookInfoByID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GetBookInformationServer).GetBookInfoByID(ctx, req.(*IdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GetBookInformation_GetBookInfoByUrl_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UrlRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GetBookInformationServer).GetBookInfoByUrl(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protoGetBookInfo.GetBookInformation/GetBookInfoByUrl",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GetBookInformationServer).GetBookInfoByUrl(ctx, req.(*UrlRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _GetBookInformation_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protoGetBookInfo.GetBookInformation",
	HandlerType: (*GetBookInformationServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetBookInfoByID",
			Handler:    _GetBookInformation_GetBookInfoByID_Handler,
		},
		{
			MethodName: "GetBookInfoByUrl",
			Handler:    _GetBookInformation_GetBookInfoByUrl_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "GetBookInfo.proto",
}
